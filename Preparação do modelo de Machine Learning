import pandas as pd
import numpy as np
import pickle
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

# Gerando um conjunto de dados simulado
np.random.seed(42)
n_samples = 1000

# Variáveis de entrada simuladas (ex: temperatura, umidade, hora do dia)
temperatura = np.random.uniform(10, 35, n_samples)  # Temperatura em °C
umidade = np.random.uniform(30, 90, n_samples)      # Umidade em %
hora = np.random.randint(0, 24, n_samples)          # Hora do dia (0-23)

# Número de bicicletas alugadas (variável alvo)
bicicletas_alugadas = 50 + 2*temperatura + 0.3*umidade - 1.5*hora + np.random.normal(0, 5, n_samples)

# Criar DataFrame
df = pd.DataFrame({
    'temperatura': temperatura,
    'umidade': umidade,
    'hora': hora,
    'bicicletas_alugadas': bicicletas_alugadas
})

# Dividir os dados em treino e teste
X = df[['temperatura', 'umidade', 'hora']]
y = df['bicicletas_alugadas']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Treinar um modelo de regressão linear
model = LinearRegression()
model.fit(X_train, y_train)

# Salvar o modelo treinado
with open('modelo_bicicletas.pkl', 'wb') as f:
    pickle.dump(model, f)
